<h1>練習Dartpad</h1>
<p><iframe height="1000" src="https://dartpad.dartlang.org/embed-dart.html?for&amp;theme=dark" width="1200"></iframe></p>
<h2>Hello world</h2>
<p></p>
<p><span style="color: #000000;"><img alt="" height="1000" src="https://truth.bahamut.com.tw/s01/201807/82eb76cdb3d22e35935da96e3c126f68.JPG" width="1000"/></span></p>
<p><span style="color: #000000;"><a href="https://github.com/mdecourse/cmsimde" style="color: #000000;"></a></span></p>
<p><iframe height="800" src="https://dartpad.dev/embed-inline.html?id=901a4415106d7fa670913ecf9e1e2df1" width="1000"></iframe></p>
<h2>迴圈程式</h2>
<p></p>
<p style="text-align: center;"><span style="text-decoration: underline; background-color: #99cc00; color: #0000ff;"><a href="https://docs.google.com/forms/d/e/1FAIpQLSdDN22BdIxF5IDiT9vnovehpFBBjmPVylJiLy19XoJxG0GMrA/viewform" style="background-color: #99cc00; color: #0000ff; text-decoration: underline;">自評表</a></span></p>
<p></p>
<p><iframe height="1000" src="https://dartpad.dartlang.org/embed-dart.html?id=7aceb9ac07a39022294159603d20fc0a&amp;theme=dark" width="1200"></iframe></p>
<ol>
<li><span style="color: #000000;">Gits：<span style="color: #993366;"><a href="https://gist.github.com/40823142/7aceb9ac07a39022294159603d20fc0a" style="color: #993366;">https://gist.github.com/40823142/7aceb9ac07a39022294159603d20fc0a</a></span></span></li>
<li><span style="color: #000000;">Dartpad：<span style="color: #993366;"><a href="https://mde.tw/dartpad/?id=789cb8eac67b1081fff9559e278f8f96" style="color: #993366;">https://mde.tw/dartpad/?id=7aceb9ac07a39022294159603d20fc0a</a></span></span></li>
<li><span style="color: #000000;">原始碼：</span></li>
</ol>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">void main() {
  for (var i = 0; i &lt; 11; i++) {
    print('hello $i');
  }
  print('hello ⣼⡿⢋⣭⣤⣬⣉⠛⢷⡜⣿⣿⣿⠿⠿⠿⠿⢿⣿⣿⣿⣿⣿⡿⢟⣛⣩⣭⣟⡻');
  print('hello ⣿⠁⣿⣿⣿⡿⠛⣁⣼⣿⣶⣶⣶⣾⣿⣿⣿⣶⣶⣦⣭⣍⠁⠺⣿⠛⣉⣭⣥⡙');
  print('hello ⣿⡄⠿⢋⣡⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣤⡚⢿⣿⣿⣿');
  print('hello ⠹⠛⣲⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡙⣟⣽');
  print('hello ⣣⣾⣿⣿⣿⣿⣿⡿⠟⣛⣛⡛⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡌⣡');
  print('hello ⣿⣿⣿⣿⣿⣿⠏⣰⣿⣿⣿⡿⣷⡹⣿⣿⣿⣿⣿⣿⣿⣿⠿⣋⣽⣿⣭⡹⣷⢹');
  print('hello ⣿⣿⣿⣿⣿⣿⠄⣿⣿⣿⠄⠄⠄⡇⣿⣿⣿⣿⣿⣿⣿⠇⣾⣿⣿⠟⠛⠻⡞⡏');
  print('hello ⣿⣿⣿⣿⣿⣿⣆⠙⢿⣿⣷⣶⡶⣱⣿⣿⣿⣿⣿⣿⣿⡀⣿⣿⣿⠄⠄⠄⡇⣇');
  print('hello ⣿⣿⣿⣿⣿⣿⣿⣿⣦⡬⢉⣐⣾⣿⣿⣿⡿⠿⢿⣿⣿⣷⣬⡛⠿⠿⠖⣋⣼⣿');
  print('hello ⣿⣿⣿⣿⣿⣿⣿⣿⡟⢰⣿⣿⣿⣿⣿⠁⠄⠄⠄⢸⣿⣿⣤⡙⣿⣿⣿⣿⣿⣿');
  print('hello ⣿⣿⣿⣿⣿⣿⣿⣿⣇⠸⣿⣿⣿⣿⣿⡷⠤⢤⣤⣾⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿');
  print('hello ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣤⠄⣤⢠⣴⣶⣷⣦⣤⣙⠛⢛⣋⣴⣿⣿⣿⣿⣿⣿');
  print('hello ⢿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⠄⣿⡘⣿⣿⣿⣿⠟⣿⢠⣿⣿⡿⣿⣿⡟⢻⣿⢏');
  print('hello ⠈⠟⣡⠙⠟⣹⣿⣿⣿⣿⣿⣇⠹⣧⣙⠿⢿⣿⣶⠇⣾⣿⣿⡇⢹⠏⣡⡘⡟⠸');
  print('hello ⣧⣾⣿⣶⣾⣿⣿⣿⣿⣿⣿⣿⣧⣈⠛⠛⠿⢟⣡⣾⣿⣿⣿⣿⣤⣾⣿⣷⣶⣿');
  print('---------------------------------------------------');
  print('⠄⠄⠄⠄⠄⠄⠄⠈⠉⠁⠈⠉⠉⠙⠿⣿⣿⣿⣿⣿');
  print('⠄⠄⠄⠄⠄⠄⠄⠄⣀⣀⣀⠄⠄⠄⠄⠄⠹⣿⣿⣿');
  print('⠄⠄⠄⠄⠄⢐⣲⣿⣿⣯⠭⠉⠙⠲⣄⡀⠄⠈⢿⣿');
  print('⠐⠄⠄⠰⠒⠚⢩⣉⠼⡟⠙⠛⠿⡟⣤⡳⡀⠄⠄⢻');
  print('⠄⠄⢀⣀⣀⣢⣶⣿⣦⣭⣤⣭⣵⣶⣿⣿⣏⠄⠄⣿');
  print('⠄⣼⣿⣿⣿⡉⣿⣀⣽⣸⣿⣿⣿⣿⣿⣿⣿⡆⣀⣿');
  print('⢠⣿⣿⣿⠿⠟⠛⠻⢿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣼');
  print('⠄⣿⣿⣿⡆⠄⠄⠄⠄⠳⡈⣿⣿⣿⣿⣿⣿⣿⣿⣿');
  print('⠄⢹⣿⣿⡇⠄⠄⠄⠄⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿');
  print('⠄⢹⣿⣿⡇⠄⠄⠄⠄⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿');
  print('⠄⠄⢿⣿⣷⣨⣽⣭⢁⣡⣿⣿⠟⣩⣿⣿⣿⠿⠿⠟');
  print('⠄⠄⠈⡍⠻⣿⣿⣿⣿⠟⠋⢁⣼⠿⠋⠉⠄⠄⠄⠄');
  print('⠄⠄⠄⠈⠴⢬⣙⣛⡥⠴⠂⠄⠄⠄⠄⠄⠄⠄⠄⠄');

  

}</pre>
<hr/>
<p><span style="color: #000000;"><img alt="" height="800" src="https://truth.bahamut.com.tw/s01/201807/16fe02833d15ca7e4ceaa03b742e7f6e.JPG" width="700"/></span></p>
<h2>Loop</h2>
<p><iframe height="1000" src="https://dartpad.dartlang.org/embed-dart.html?gh_owner=mdecourse&amp;gh_repo=cp2019&amp;gh_path=downloads/dart_ex/for&amp;theme=dark" width="1200"></iframe></p>
<h2>亂數分組程式</h2>
<p></p>
<p><span style="color: #000000;">Gits：<span style="color: #993366;"><a href="https://gist.github.com/40823142/80e449253df1db9c272fdb36dcd0aa55" style="color: #993366;">https://gist.github.com/40823142/?id=80e449253df1db9c272fdb36dcd0aa55</a></span></span></p>
<p><span style="color: #000000;">Dartpad：<span style="color: #993366;"><a href="https://mde.tw/dartpad/?id=80e449253df1db9c272fdb36dcd0aa55" style="color: #993366;">https://mde.tw/dartpad/?id=80e449253df1db9c272fdb36dcd0aa55</a></span></span></p>
<p><span style="color: #000000;">原始碼：</span></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">import 'dart:html';

void main() {
  // 每一組 10 人
  int num = 10;
  // 組序由 1 開始
  int gth = 1;
  // 迴圈序號變數
  int i;
  // 每組學員暫存數列
  var gp_list = [];
  // 全班分組數列
  var cp2019 = [];

  HttpRequest.getString(
          'https://mde.tw/cp2019/downloads/2019fall_cp_1a_list.txt')
      .then((String resp) {
    // 利用 trim() 去除字串最後的跳行符號, 之後再利用 split() 根據 \n 轉為數列
    var stud_list = resp.trim().split("\n");
    // 數列利用 shuffle() 方法以隨機方法弄亂順序
    stud_list.shuffle();
    // 逐一讀取已經弄亂的學生學號數列, 利用模數運算每幾人分成一組
    for (i = 0; i &lt; stud_list.length; i++) {
      // 0, 1~(num-1), num
      if (i % num == 0) {
        gp_list = [];
        // 列印區隔符號
        print('=' * 20);
        print("group $gth :");
        print(stud_list[i]);
        // 在各分組數列中加入將對應的學員學號
        gp_list.add(stud_list[i]);
        gth = gth + 1;
      } else {
        print(stud_list[i]);
        // 在各分組數列中加入將對應的學員學號
        gp_list.add(stud_list[i]);
      }
      if (i % num == 0) {
        // 逐步將各組暫存的分組數列加入全班分組數列中
        cp2019.add(gp_list);
      }
    }
    // 列出全班分組數列
    print(cp2019);
  });
}</pre>
<p></p>
<p></p>
<p><iframe height="600" src="https://dartpad.dev/embed-inline.html?id=80e449253df1db9c272fdb36dcd0aa55" width="800"></iframe></p>
<h1>各周作業</h1>
<p>Gits：<a href="https://gist.github.com/40823142/3ee5ccb9a812092694f5e2ddab7c06b1">https://gist.github.com/40823142/3ee5ccb9a812092694f5e2ddab7c06b1</a></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">// 下列 Dart 程式, 利用 Runge Kutta 迭代運算法, 解常微分方程式
// 設 t 為時間, x 則設為物體的位移
// 假設要解 F=ma 的單一質量加上彈簧 (常數為 k) 與黏滯阻尼 (常數為 b)
// f 為沿位移方向的施力
// dx/dt = v, dv/dt = (f-kx-bv)/m
// dx / dt = (t - x)/2, 起始值 t0=0, x0=1, 求 t=2 時的 x 值
//
// 已知起始值 t0 與 x0 後, 可以利用下列 rungeKutta 函式, 以
// h 為每步階增量值, 求 dxdt 常微分方程式任一 t 的對應值 x
// 定義函式 rungeKutta, 共有四個輸入變數
// 物體質量
const num m = 1;
// 對質量的施力 f
const num f = 0.0;
// 彈簧係數
const num k = 1;
// 阻尼係數
const num b = 1;

// 呼叫運算時, 需要起始時間, 終點時間, 位移起始值與速度起始值, 增量 h
rungeKutta(t0, x0, v0, t, h) {
  // 利用步階增量值 h 與 t 的起始及終點值
  // 計算需要迭代的次數 n
  int n = ((t - t0) / h).toInt();
  // 宣告 x 為雙浮點數, 且設為起始值 x0
  double x = x0;
  // 宣告 v 為雙浮點數, 且設為起始值 v0
  double v = v0;
  // 利用已知的 t0, x0, t 終點值與步階增量值 h, 迭代求 x 對應值
  // 索引值 i 將每次增量 1, 從 i=1 執行 for 環圈至 i=n
    print("t: ${t0.toStringAsFixed(3)}, x: ${x.toStringAsFixed(3)}, v: ${v.toStringAsFixed(3)}");
  for (int i = 1; i &lt;= n; i++) {
    // 將此階段的 t 與 x 值代入 dxdt 與 dvdt 函式求下列四個浮點變數值
    // 因為必須兩個函式耦合, 必須同時計算
    double xk1 = h * dxdt(t0, x, v);
    double vk1 = h * dvdt(t0, x, v);
    double xk2 = h * dxdt(t0 + 0.5 * h, x + 0.5 * xk1, v + 0.5 * vk1);
    double vk2 = h * dvdt(t0 + 0.5 * h, x + 0.5 * xk1, v + 0.5 * vk1);
    double xk3 = h * dxdt(t0 + 0.5 * h, x + 0.5 * xk2, v + 0.5 * vk2);
    double vk3 = h * dvdt(t0 + 0.5 * h, x + 0.5 * xk2, v + 0.5 * vk2);
    double xk4 = h * dxdt(t0 + h, x + xk3, v + vk3);
    double vk4 = h * dvdt(t0 + h, x + xk3, v + vk3);
    // 利用上述四個變數值求此步階增量後的對應 x 值
    x = x + (1.0 / 6.0) * (xk1 + 2 * xk2 + 2 * xk3 + xk4);
    v = v + (1.0 / 6.0) * (vk1 + 2 * vk2 + 2 * vk3 + vk4);
    // 只列到小數點第三位
    print("t: ${t0.toStringAsFixed(3)}, x: ${x.toStringAsFixed(3)}, v: ${v.toStringAsFixed(3)}");
    // 每次 for 迴圈執行最後, 準備計算下一個步階增量後的 x 對應值
    // t 起始值配合步階增量值 h, 進行增量
    t0 = t0 + h;
  }
  // 完成 for 迴圈迭代後, 傳回與 t 終點值對應的 x 值
  return [x, v];
}

// 將微分方程式 "dx / dt = v" 定義為 dxdt 函式
dxdt(t, x, v) {
  return v;
}
// dx/dt = v, dv/dt = (f-kx-bv)/m
dvdt(t,x, v) {
  return (f - k*x - b*v)/m;
}

// 定義 main() 主函式內容, 目的在利用 rungeKutta 函式
// 解常微分方程式
main() {
// Driver method
// num 資料型別可以是整數或雙浮點數
  num t0 = 0;
  num x0 = 1;
  num v0 = 0;
  num t = 20;
  double h = 0.1;
  rungeKutta(t0, x0, v0, t, h);
}</pre>
<p><iframe height="1000" src="https://dartpad.dartlang.org/embed-dart.html?id=3ee5ccb9a812092694f5e2ddab7c06b1&amp;theme=dark" width="1200"></iframe></p>
<p></p>
<p><img alt="" height="457" src="/images/image (1).png" width="715"/></p>
<p></p>
<p></p>
<p>Gits：<a href="https://gist.github.com/40823142/0b1d1fbe4acff3ee77816ee0179d6dd4">https://gist.github.com/40823142/0b1d1fbe4acff3ee77816ee0179d6dd4</a></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">// 下列 Dart 程式, 利用 Runge Kutta 迭代運算法, 解常微分方程式
// 設 t 為時間, x 則設為物體的位移
// 假設要解 F=ma 的單一質量加上彈簧 (常數為 k) 與黏滯阻尼 (常數為 b)
// f 為沿位移方向的施力
// dx/dt = v, dv/dt = (f-kx-bv)/m
// dx / dt = (t - x)/2, 起始值 t0=0, x0=1, 求 t=2 時的 x 值
//
// 已知起始值 t0 與 x0 後, 可以利用下列 rungeKutta 函式, 以
// h 為每步階增量值, 求 dxdt 常微分方程式任一 t 的對應值 x
// 定義函式 rungeKutta, 共有四個輸入變數
// 物體質量
const num m = 1;
// 對質量的施力 f
const num f = 0.0;
// 彈簧係數
const num k = 1;
// 阻尼係數
const num b = 0;

// 呼叫運算時, 需要起始時間, 終點時間, 位移起始值與速度起始值, 增量 h
rungeKutta(t0, x0, v0, t, h) {
  // 利用步階增量值 h 與 t 的起始及終點值
  // 計算需要迭代的次數 n
  int n = ((t - t0) / h).toInt();
  // 宣告 x 為雙浮點數, 且設為起始值 x0
  double x = x0;
  // 宣告 v 為雙浮點數, 且設為起始值 v0
  double v = v0;
  // 利用已知的 t0, x0, t 終點值與步階增量值 h, 迭代求 x 對應值
  // 索引值 i 將每次增量 1, 從 i=1 執行 for 環圈至 i=n
    print("t: ${t0.toStringAsFixed(3)}, x: ${x.toStringAsFixed(3)}, v: ${v.toStringAsFixed(3)}");
  for (int i = 1; i &lt;= n; i++) {
    // 將此階段的 t 與 x 值代入 dxdt 與 dvdt 函式求下列四個浮點變數值
    // 因為必須兩個函式耦合, 必須同時計算
    double xk1 = h * dxdt(t0, x, v);
    double vk1 = h * dvdt(t0, x, v);
    double xk2 = h * dxdt(t0 + 0.5 * h, x + 0.5 * xk1, v + 0.5 * vk1);
    double vk2 = h * dvdt(t0 + 0.5 * h, x + 0.5 * xk1, v + 0.5 * vk1);
    double xk3 = h * dxdt(t0 + 0.5 * h, x + 0.5 * xk2, v + 0.5 * vk2);
    double vk3 = h * dvdt(t0 + 0.5 * h, x + 0.5 * xk2, v + 0.5 * vk2);
    double xk4 = h * dxdt(t0 + h, x + xk3, v + vk3);
    double vk4 = h * dvdt(t0 + h, x + xk3, v + vk3);
    // 利用上述四個變數值求此步階增量後的對應 x 值
    x = x + (1.0 / 6.0) * (xk1 + 2 * xk2 + 2 * xk3 + xk4);
    v = v + (1.0 / 6.0) * (vk1 + 2 * vk2 + 2 * vk3 + vk4);
    // 只列到小數點第三位
    print("t: ${t0.toStringAsFixed(3)}, x: ${x.toStringAsFixed(3)}, v: ${v.toStringAsFixed(3)}");
    // 每次 for 迴圈執行最後, 準備計算下一個步階增量後的 x 對應值
    // t 起始值配合步階增量值 h, 進行增量
    t0 = t0 + h;
  }
  // 完成 for 迴圈迭代後, 傳回與 t 終點值對應的 x 值
  return [x, v];
}

// 將微分方程式 "dx / dt = v" 定義為 dxdt 函式
dxdt(t, x, v) {
  return v;
}
// dx/dt = v, dv/dt = (f-kx-bv)/m
dvdt(t,x, v) {
  return (f - k*x - b*v)/m;
}

// 定義 main() 主函式內容, 目的在利用 rungeKutta 函式
// 解常微分方程式
main() {
// Driver method
// num 資料型別可以是整數或雙浮點數
  num t0 = 0;
  num x0 = 1;
  num v0 = 0;
  num t = 20;
  double h = 0.1;
  rungeKutta(t0, x0, v0, t, h);
}</pre>
<p></p>
<p><iframe height="1000" src="https://dartpad.dartlang.org/embed-dart.html?id=0b1d1fbe4acff3ee77816ee0179d6dd4&amp;theme=dark" width="1200"></iframe> </p>
<p><img alt="" height="474" src="/images/image (2).png" width="798"/></p>
<h2>第七周</h2>
<p>Gits：<a href="https://gist.github.com/40823142/3ee5ccb9a812092694f5e2ddab7c06b1">https://gist.github.com/40823142/3ee5ccb9a812092694f5e2ddab7c06b1</a></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">// 下列 Dart 程式, 利用 Runge Kutta 迭代運算法, 解常微分方程式
// 設 t 為時間, x 則設為物體的位移
// 假設要解 F=ma 的單一質量加上彈簧 (常數為 k) 與黏滯阻尼 (常數為 b)
// f 為沿位移方向的施力
// dx/dt = v, dv/dt = (f-kx-bv)/m
// dx / dt = (t - x)/2, 起始值 t0=0, x0=1, 求 t=2 時的 x 值
//
// 已知起始值 t0 與 x0 後, 可以利用下列 rungeKutta 函式, 以
// h 為每步階增量值, 求 dxdt 常微分方程式任一 t 的對應值 x
// 定義函式 rungeKutta, 共有四個輸入變數
// 物體質量
const num m = 1;
// 對質量的施力 f
const num f = 0.0;
// 彈簧係數
const num k = 1;
// 阻尼係數
const num b = 1;

// 呼叫運算時, 需要起始時間, 終點時間, 位移起始值與速度起始值, 增量 h
rungeKutta(t0, x0, v0, t, h) {
  // 利用步階增量值 h 與 t 的起始及終點值
  // 計算需要迭代的次數 n
  int n = ((t - t0) / h).toInt();
  // 宣告 x 為雙浮點數, 且設為起始值 x0
  double x = x0;
  // 宣告 v 為雙浮點數, 且設為起始值 v0
  double v = v0;
  // 利用已知的 t0, x0, t 終點值與步階增量值 h, 迭代求 x 對應值
  // 索引值 i 將每次增量 1, 從 i=1 執行 for 環圈至 i=n
    print("t: ${t0.toStringAsFixed(3)}, x: ${x.toStringAsFixed(3)}, v: ${v.toStringAsFixed(3)}");
  for (int i = 1; i &lt;= n; i++) {
    // 將此階段的 t 與 x 值代入 dxdt 與 dvdt 函式求下列四個浮點變數值
    // 因為必須兩個函式耦合, 必須同時計算
    double xk1 = h * dxdt(t0, x, v);
    double vk1 = h * dvdt(t0, x, v);
    double xk2 = h * dxdt(t0 + 0.5 * h, x + 0.5 * xk1, v + 0.5 * vk1);
    double vk2 = h * dvdt(t0 + 0.5 * h, x + 0.5 * xk1, v + 0.5 * vk1);
    double xk3 = h * dxdt(t0 + 0.5 * h, x + 0.5 * xk2, v + 0.5 * vk2);
    double vk3 = h * dvdt(t0 + 0.5 * h, x + 0.5 * xk2, v + 0.5 * vk2);
    double xk4 = h * dxdt(t0 + h, x + xk3, v + vk3);
    double vk4 = h * dvdt(t0 + h, x + xk3, v + vk3);
    // 利用上述四個變數值求此步階增量後的對應 x 值
    x = x + (1.0 / 6.0) * (xk1 + 2 * xk2 + 2 * xk3 + xk4);
    v = v + (1.0 / 6.0) * (vk1 + 2 * vk2 + 2 * vk3 + vk4);
    // 只列到小數點第三位
    print("t: ${t0.toStringAsFixed(3)}, x: ${x.toStringAsFixed(3)}, v: ${v.toStringAsFixed(3)}");
    // 每次 for 迴圈執行最後, 準備計算下一個步階增量後的 x 對應值
    // t 起始值配合步階增量值 h, 進行增量
    t0 = t0 + h;
  }
  // 完成 for 迴圈迭代後, 傳回與 t 終點值對應的 x 值
  return [x, v];
}

// 將微分方程式 "dx / dt = v" 定義為 dxdt 函式
dxdt(t, x, v) {
  return v;
}
// dx/dt = v, dv/dt = (f-kx-bv)/m
dvdt(t,x, v) {
  return (f - k*x - b*v)/m;
}

// 定義 main() 主函式內容, 目的在利用 rungeKutta 函式
// 解常微分方程式
main() {
// Driver method
// num 資料型別可以是整數或雙浮點數
  num t0 = 0;
  num x0 = 1;
  num v0 = 0;
  num t = 20;
  double h = 0.1;
  rungeKutta(t0, x0, v0, t, h);
}</pre>
<p><iframe height="1000" src="https://dartpad.dartlang.org/embed-dart.html?id=3ee5ccb9a812092694f5e2ddab7c06b1&amp;theme=dark" width="1200"></iframe></p>
<p></p>
<p><img alt="" height="457" src="/images/image (1).png" width="715"/></p>
<p></p>
<p></p>
<p>Gits：<a href="https://gist.github.com/40823142/0b1d1fbe4acff3ee77816ee0179d6dd4">https://gist.github.com/40823142/0b1d1fbe4acff3ee77816ee0179d6dd4</a></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">// 下列 Dart 程式, 利用 Runge Kutta 迭代運算法, 解常微分方程式
// 設 t 為時間, x 則設為物體的位移
// 假設要解 F=ma 的單一質量加上彈簧 (常數為 k) 與黏滯阻尼 (常數為 b)
// f 為沿位移方向的施力
// dx/dt = v, dv/dt = (f-kx-bv)/m
// dx / dt = (t - x)/2, 起始值 t0=0, x0=1, 求 t=2 時的 x 值
//
// 已知起始值 t0 與 x0 後, 可以利用下列 rungeKutta 函式, 以
// h 為每步階增量值, 求 dxdt 常微分方程式任一 t 的對應值 x
// 定義函式 rungeKutta, 共有四個輸入變數
// 物體質量
const num m = 1;
// 對質量的施力 f
const num f = 0.0;
// 彈簧係數
const num k = 1;
// 阻尼係數
const num b = 0;

// 呼叫運算時, 需要起始時間, 終點時間, 位移起始值與速度起始值, 增量 h
rungeKutta(t0, x0, v0, t, h) {
  // 利用步階增量值 h 與 t 的起始及終點值
  // 計算需要迭代的次數 n
  int n = ((t - t0) / h).toInt();
  // 宣告 x 為雙浮點數, 且設為起始值 x0
  double x = x0;
  // 宣告 v 為雙浮點數, 且設為起始值 v0
  double v = v0;
  // 利用已知的 t0, x0, t 終點值與步階增量值 h, 迭代求 x 對應值
  // 索引值 i 將每次增量 1, 從 i=1 執行 for 環圈至 i=n
    print("t: ${t0.toStringAsFixed(3)}, x: ${x.toStringAsFixed(3)}, v: ${v.toStringAsFixed(3)}");
  for (int i = 1; i &lt;= n; i++) {
    // 將此階段的 t 與 x 值代入 dxdt 與 dvdt 函式求下列四個浮點變數值
    // 因為必須兩個函式耦合, 必須同時計算
    double xk1 = h * dxdt(t0, x, v);
    double vk1 = h * dvdt(t0, x, v);
    double xk2 = h * dxdt(t0 + 0.5 * h, x + 0.5 * xk1, v + 0.5 * vk1);
    double vk2 = h * dvdt(t0 + 0.5 * h, x + 0.5 * xk1, v + 0.5 * vk1);
    double xk3 = h * dxdt(t0 + 0.5 * h, x + 0.5 * xk2, v + 0.5 * vk2);
    double vk3 = h * dvdt(t0 + 0.5 * h, x + 0.5 * xk2, v + 0.5 * vk2);
    double xk4 = h * dxdt(t0 + h, x + xk3, v + vk3);
    double vk4 = h * dvdt(t0 + h, x + xk3, v + vk3);
    // 利用上述四個變數值求此步階增量後的對應 x 值
    x = x + (1.0 / 6.0) * (xk1 + 2 * xk2 + 2 * xk3 + xk4);
    v = v + (1.0 / 6.0) * (vk1 + 2 * vk2 + 2 * vk3 + vk4);
    // 只列到小數點第三位
    print("t: ${t0.toStringAsFixed(3)}, x: ${x.toStringAsFixed(3)}, v: ${v.toStringAsFixed(3)}");
    // 每次 for 迴圈執行最後, 準備計算下一個步階增量後的 x 對應值
    // t 起始值配合步階增量值 h, 進行增量
    t0 = t0 + h;
  }
  // 完成 for 迴圈迭代後, 傳回與 t 終點值對應的 x 值
  return [x, v];
}

// 將微分方程式 "dx / dt = v" 定義為 dxdt 函式
dxdt(t, x, v) {
  return v;
}
// dx/dt = v, dv/dt = (f-kx-bv)/m
dvdt(t,x, v) {
  return (f - k*x - b*v)/m;
}

// 定義 main() 主函式內容, 目的在利用 rungeKutta 函式
// 解常微分方程式
main() {
// Driver method
// num 資料型別可以是整數或雙浮點數
  num t0 = 0;
  num x0 = 1;
  num v0 = 0;
  num t = 20;
  double h = 0.1;
  rungeKutta(t0, x0, v0, t, h);
}</pre>
<p></p>
<p><iframe height="1000" src="https://dartpad.dartlang.org/embed-dart.html?id=0b1d1fbe4acff3ee77816ee0179d6dd4&amp;theme=dark" width="1200"></iframe> </p>
<p><img alt="" height="474" src="/images/image (2).png" width="798"/></p>
<h2>第十周</h2>
<p></p>
<p>攝氏轉華氏：</p>
<p><iframe height="1000" src="https://dartpad.dartlang.org/embed-dart.html?id=0531e7bcacabc538c5d646e923bb402f&amp;theme=dark" width="1200"></iframe></p>
<p>華氏轉攝氏：<iframe height="1000" src="https://dartpad.dartlang.org/embed-dart.html?id=132e78a9b66a0e242a3a91b0f5a87813&amp;theme=dark" width="1200"></iframe></p>
<h2>第十二周</h2>
<p></p>
<pre></pre>
<script>
function getDart(dirname){
    source = "https://dartpad.github.io/embed-dart.html?gh_owner=40823142&gh_repo=cp2019&gh_path=downloads/dart_ex/" + dirname + "&theme=dark";
    document.getElementById("iframe").src = source ;
}
function largest(){
document.getElementById("iframe").width = document.body.clientWidth ;
document.getElementById("iframe").height = document.body.clientWidth*0.5 ;
}
function original(){
document.getElementById("iframe").width = 1200 ;
document.getElementById("iframe").height = 800 ;
}
</script>
<!-- 取 Dart 程式的按鈕 -->
<p><button onclick="getDart('華攝氏徵測轉換')">華攝氏徵測轉換</button></p>
<!-- 內建放入的 Dart 原始碼 -->
<p><button onclick="largest()">放大</button> <button onclick="original()">回復</button></p>
<p><iframe height="800" id="iframe" src="https://dartpad.dartlang.org/embed-dart.html?gh_owner=40823142&amp;gh_repo=cp2019&amp;gh_path=downloads/dart_ex/華攝氏徵測轉換&amp;theme=dark" width="1200"></iframe></p>
<p></p>
<h2>第十三周</h2>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/9n-AW6R4vB0" width="560"></iframe></p>
<h2>第十四周</h2>
<p><img alt="" height="1232" src="/images/Html 流程圖.png" width="1200"/></p>
<h2>第十五周</h2>
<p></p>
<pre></pre>
<script>
function getDart(dirname){
    source = "https://dartpad.github.io/embed-dart.html?gh_owner=40823142&gh_repo=cp2019&gh_path=downloads/dart_ex/" + dirname + "&theme=dark";
    document.getElementById("iframe").src = source ;
}
function largest(){
document.getElementById("iframe").width = document.body.clientWidth ;
document.getElementById("iframe").height = document.body.clientWidth*0.5 ;
}
function original(){
document.getElementById("iframe").width = 1200 ;
document.getElementById("iframe").height = 800 ;
}
</script>
<!-- 取 Dart 程式的按鈕 -->
<p><button onclick="getDart('亂數分組')">亂數分組</button></p>
<p><button onclick="getDart('國旗')">國旗(未完成)</button></p>
<!-- 內建放入的 Dart 原始碼 -->
<p><button onclick="largest()">放大</button> <button onclick="original()">回復</button></p>
<p><iframe height="800" id="iframe" src="https://dartpad.dartlang.org/embed-dart.html?gh_owner=40823142&amp;gh_repo=cp2019&amp;gh_path=downloads/dart_ex/亂數分組&amp;theme=dark" width="1200"></iframe></p>
<p><span>-----------------------------------</span><span>-----------------------------------</span><span>-----------------------------------</span><span>----</span></p>
<p>(五芒星)</p>
<p><img alt="" height="971" src="/images/星星.PNG" width="1914"/></p>
<p></p>
<h2>第十六周</h2>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/7m2TJRHbCuQ" width="560"></iframe></p>
<p></p>
<h2>第十七周</h2>
<p style="text-align: center;">國旗</p>
<p><canvas height="200" id="canvas" width="300"></canvas> <button id="clear">清除</button> <button id="usa">俄羅斯國旗</button> <button id="fr">法國國旗</button> <button id="LN">荷蘭國旗</button> <button id="BDR">德國國旗</button> <button id="ROC">中華民國國旗</button> <button id="jp">日本國旗</button></p>
<script src="/../cp2019/downloads/dart_ex/Flag/flag.js"></script>
<p>-------------------------------------------------------------------------------------------------------------</p>
<p></p>
<pre></pre>
<script>
function getDart(dirname){
    source = "https://dartpad.github.io/embed-dart.html?gh_owner=40823142&gh_repo=cp2019&gh_path=downloads/dart_ex/" + dirname + "&theme=dark";
    document.getElementById("iframe").src = source ;
}
function largest(){
document.getElementById("iframe").width = document.body.clientWidth ;
document.getElementById("iframe").height = document.body.clientWidth*0.5 ;
}
function original(){
document.getElementById("iframe").width = 1200 ;
document.getElementById("iframe").height = 800 ;
}
</script>
<!-- 取 Dart 程式的按鈕 -->
<p><button onclick="getDart('kgotlb')">重量轉換</button></p>
<!-- 內建放入的 Dart 原始碼 -->
<p><button onclick="largest()">放大</button> <button onclick="original()">回復</button></p>
<p><iframe height="800" id="iframe" src="https://dartpad.dartlang.org/embed-dart.html?gh_owner=40823142&amp;gh_repo=cp2019&amp;gh_path=downloads/dart_ex/kgotlb&amp;theme=dark" width="1200"></iframe></p>
<p></p><h1>想看貓貓的點進來啦</h1>
<p><img src="https://scontent.ftpe2-1.fna.fbcdn.net/v/t1.15752-9/56616331_2061694463926317_5630084470104129536_n.jpg?_nc_cat=107&amp;_nc_oc=AQm6qPP7xED62-ltoBTxWBkwjknyr5kCsarEvwQMUcPm9IimaFhQ0H1P0bQ4M5Y4tlE&amp;_nc_ht=scontent.ftpe2-1.fna&amp;oh=0c8337769032578f879655bc85433f7a&amp;oe=5E20339F"/></p>
<p><img src="https://scontent.ftpe2-2.fna.fbcdn.net/v/t1.15752-9/56178490_632755790479410_1346349866497867776_n.jpg?_nc_cat=106&amp;_nc_oc=AQkTz7VIRGyZk3m5uyztQ96zzAuBelBup82_xrea6C83ctDXdWL3fa5McOFwaJTiTZs&amp;_nc_ht=scontent.ftpe2-2.fna&amp;oh=f209b6f1580b379163feec6d7e253390&amp;oe=5E5AF6B1"/></p>
<p><img src="https://scontent.ftpe2-2.fna.fbcdn.net/v/t1.15752-9/56426937_812590459125024_5129487047999881216_n.jpg?_nc_cat=109&amp;_nc_oc=AQkQZE-6kxCD-96FuSpkX-JKxbPUX1We4uMGGADP34BU3hVnL00QTVdO8JyNRZLcmP0&amp;_nc_ht=scontent.ftpe2-2.fna&amp;oh=15bc1bb2bff7aec13c3064615257f5ec&amp;oe=5E617328"/></p>
<p><img src="https://scontent.ftpe2-2.fna.fbcdn.net/v/t1.15752-9/56587611_337099970276035_4203008116297564160_n.jpg?_nc_cat=108&amp;_nc_oc=AQmQdc_V8Fy5vLvUnsG9vdlcjbYB_vkmfl8_G01nQcE8mzW_MKxebMF_8uyw-C8nIt0&amp;_nc_ht=scontent.ftpe2-2.fna&amp;oh=05f3c69da5f5a4bf1c9c68a6f19d323a&amp;oe=5E28AB51"/></p>
<p><img src="https://scontent.ftpe2-1.fna.fbcdn.net/v/t1.15752-9/56120070_2199956320050651_909154210451292160_n.jpg?_nc_cat=107&amp;_nc_oc=AQl6pkb1YyE2GIwHzok-0iJj3vHSYzjhf9V_3ezcIhFpaow4bpeKPgETdRAcAFSCdDs&amp;_nc_ht=scontent.ftpe2-1.fna&amp;oh=6448e2a67deb18f48f7afe171237d96b&amp;oe=5E25A60C"/></p>
<p><img src="https://scontent.ftpe2-1.fna.fbcdn.net/v/t1.15752-9/56215510_438817060025839_8993724507814363136_n.jpg?_nc_cat=103&amp;_nc_oc=AQkB-M7iS8TJG6a4Yurs8CwoyyZQrgbEh-9TWl-u8ClSX3O6MDLJbNikEEMTPdbkEAM&amp;_nc_ht=scontent.ftpe2-1.fna&amp;oh=831e7154b15372d43bc33d84a93e42c3&amp;oe=5E6010A1"/></p>
<p><img src="https://scontent.ftpe2-1.fna.fbcdn.net/v/t1.15752-9/55869472_784454381923196_3931647336597422080_n.jpg?_nc_cat=111&amp;_nc_oc=AQnwsTmZZR8Ct9oP2uVphtQzEsnAFBuEagCykZpZxlhNqWzza3_cR9EwDElxpL5CLvY&amp;_nc_ht=scontent.ftpe2-1.fna&amp;oh=023e4ac7ee8afe4c354b7cdac8dacdc2&amp;oe=5E25BF78"/></p>
<p><img src="https://scontent.ftpe2-1.fna.fbcdn.net/v/t1.15752-9/56525016_268199347459160_2936373190705807360_n.jpg?_nc_cat=105&amp;_nc_oc=AQkM4AKmX1ph2TTE0vhXAJHomuKtI2sdaTNEthAWCB5IQdcj83nOY9D25bTJ5h8oLDQ&amp;_nc_ht=scontent.ftpe2-1.fna&amp;oh=732e3322bb85e589f35b03f01cec6b6b&amp;oe=5E59B92A"/></p>
<p><img src="https://scontent.ftpe2-1.fna.fbcdn.net/v/t1.15752-9/51759659_550966372053788_494781525284356096_n.jpg?_nc_cat=103&amp;_nc_oc=AQkUH31UsReL-gH-4FvB8g8AacqJVsR2fhShhUwvOdcePgfC8GJSEvLBqSlRFFSAcQw&amp;_nc_ht=scontent.ftpe2-1.fna&amp;oh=86f131afe21f12d192138a487eca0e3e&amp;oe=5E5A1FDC"/></p>
<p><img src="https://scontent.ftpe2-2.fna.fbcdn.net/v/t1.15752-9/56439113_570744606744023_5985816789957738496_n.jpg?_nc_cat=101&amp;_nc_oc=AQkjvJnM0VkhlrcewJNY2JpFQK9rT4yMEqKW_xjxTy7n9oP6HaXLmfFVYcEm54U-ObE&amp;_nc_ht=scontent.ftpe2-2.fna&amp;oh=73c8172354f1ab8a2142d461cf3dcc7d&amp;oe=5E5D54BF"/></p>
<p><img src="https://scontent.ftpe2-1.fna.fbcdn.net/v/t1.15752-9/56537462_2200993153483519_878481087326584832_n.jpg?_nc_cat=103&amp;_nc_oc=AQmzHMozrTkIMuEou1ZNLVXiRa1Qj7lgdhAMlwFMtR-YHZngLTrowxbf3gpn1gMQIKg&amp;_nc_ht=scontent.ftpe2-1.fna&amp;oh=256e13954c96ea848e71c3c096afa475&amp;oe=5E2F34D2"/></p>
<p><img src="https://scontent.ftpe2-1.fna.fbcdn.net/v/t1.15752-9/56382697_2406618676037111_5312041609259384832_n.jpg?_nc_cat=104&amp;_nc_oc=AQkcUp9_XAi6mEd3x3a4K-1velxsMyr5KysHEp1-8x3WRNpoQQYY-M92B3_HIA0hiqo&amp;_nc_ht=scontent.ftpe2-1.fna&amp;oh=19e60c07b0024b82943c9e56fcd7cc69&amp;oe=5E2B966B"/></p>